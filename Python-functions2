Replace
itertools.product()
itertools.permutations()
Counter(myList)
collections.Counter()
collections.namedtuple()
abs(complex())
cmath.phase(complex())
myset.discard()
myset.remove()
set.add()
Set .discard(), .remove() & .pop()
set.union()
set.intersection()
set.difference()
Set .symmetric_difference()
.update()
.intersection_update()
.difference_update()
.symmetric_difference_update()
count()
issuperset()
parser.parse()

print(np.add(A,B))
print(np.subtract(A,B))
print(np.multiply(A,B))
print((A//B))
print(np.mod(A,B))
print(np.power(A,B))
Floor, ceil and rint
np.set_printoptions(sign=' ')
min() and max
round()
eval()
any()
all()
zip()
combinations_with_replacement()
groupby()
                                           #classes
                                            #Regex
reduce(),lambda()
deque.rotate()